
SETTING_ICACHE 						?= 1

GLOBAL_DEF += -DXIP_BIT=$(XIP_BIT)
GLOBAL_DEF += -DSETTING_FLASH_TOTAL_SIZE=$(SETTING_FLASH_TOTAL_SIZE)
GLOBAL_DEF += -DSETTING_PSRAM_HEAP_BASE=$(SETTING_PSRAM_HEAP_BASE)
GLOBAL_DEF += -DSETTING_PSRAM_HEAP_SIZE=$(SETTING_PSRAM_HEAP_SIZE)

FLASH_CTRL := 1
CONFIG_PM  := 0

ifeq ($(strip $(CHIP_NAME)), ssv6006)
ifeq ($(strip $(TARGET_DEF)), FPGAv3)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
endif

ifeq ($(strip $(TARGET_DEF)), ASICv2)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
endif
ifeq ($(strip $(TARGET_DEF)), FPGA)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
endif
endif

ifeq ($(strip $(CHIP_NAME)),ssv6020C)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
ifeq ($(strip $(SUPPORT_LOW_POWER)),1)
CONFIG_PM  := 1
endif
DEFAULT_CFLAGS     += -DSSV6020C
endif
ifeq ($(strip $(CHIP_NAME)),ssv6020B)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
ifeq ($(strip $(SUPPORT_LOW_POWER)),1)
CONFIG_PM  := 1
endif
#DEFAULT_CFLAGS     += -DSSV6020C
endif
ifeq ($(strip $(CHIP_NAME)),ssv6020)
FLASH_CTRL := 2
FLASH_BIT  ?= 4
ifeq ($(strip $(SUPPORT_LOW_POWER)),1)
CONFIG_PM  := 1
endif
endif

GLOBAL_DEF += -DCONFIG_PM=$(CONFIG_PM)

GLOBAL_DEF += -DSETTING_PSRAM_HEAP_SIZE=$(SETTING_PSRAM_HEAP_SIZE)

ifeq ($(strip $(FLASH_CTRL)),2)
DEFAULT_CFLAGS     += -DFLASH_CTL_v2
DEFAULT_CFLAGS     += -DFLASH_BIT=$(FLASH_BIT)
else
ifeq ($(strip $(FLASH_CTRL)), 1)
DEFAULT_CFLAGS     += -DFLASH_CTL_v1
endif
endif

##############################################################
# Build flags
##############################################################
DEFAULT_CFLAGS     += -DMINIMAL_STACK_SIZE=$(MINIMAL_STACK_SIZE) -DMAIN_STACK_SIZE=$(MAIN_STACK_SIZE) -DISR_STACK_SIZE=$(ISR_STACK_SIZE)
DEFAULT_AFLAGS     += -DMINIMAL_STACK_SIZE=$(MINIMAL_STACK_SIZE) -DMAIN_STACK_SIZE=$(MAIN_STACK_SIZE) -DISR_STACK_SIZE=$(ISR_STACK_SIZE)

ifeq ($(strip $(OS)), freertos)
DEFAULT_CFLAGS     += -DCONFIG_OS_FREERTOS
endif
ifeq ($(strip $(OS)), rhino)
DEFAULT_CFLAGS     += -DCONFIG_OS_RHINO
endif

ifeq ($(strip $(LWIP_PATH)), lwip-2.0.3)
DEFAULT_CFLAGS     += -DCONFIG_LWIP_VER2_x_x
endif


DEFAULT_CFLAGS     += \
                -DCHIP_ID=$(CHIP_ID) \
                -D$(TARGET_DEF) \
                -UCONFIG_EXT_INTC

DEFAULT_AFLAGS     += \
                -DCHIP_ID=$(CHIP_ID) \
                -D$(TARGET_DEF) \
                -UCONFIG_EXT_INTC

DEFAULT_CFLAGS    += -DCHIP_SUB_ID=$(CHIP_SUB_ID)
DEFAULT_AFLAGS    += -DCHIP_SUB_ID=$(CHIP_SUB_ID)
ifeq ($(strip $(FRONTEND)), 6020B)
DEFAULT_CFLAGS    += -DFRONTEND=6020
DEFAULT_AFLAGS    += -DFRONTEND=6020
endif

ifeq ($(strip $(ROM_MODE)), 1)
ifeq ($(strip $(ROM_VERSION)),V0016)
DEFAULT_CFLAGS     += -DROM_VERSION=16
DEFAULT_CFLAGS     += -DROM_MODE
DEFAULT_AFLAGS     += -DROM_MODE
else
ifeq ($(strip $(ROM_VERSION)),V1002)
DEFAULT_CFLAGS     += -DROM_VERSION=1002
else
DEFAULT_CFLAGS     += -DROM_VERSION=-1
endif
endif
endif

ifeq ($(strip $(TINY_LIBC)), 1)
DEFAULT_CFLAGS     += -DTINY_LIBC
endif


ifeq ($(strip $(XIP_MODE)), 1)
DEFAULT_CFLAGS     += -DXIP_MODE
DEFAULT_AFLAGS     += -DXIP_MODE
endif

DEFAULT_CFLAGS     += $(XTAL)

ifeq ($(strip $(SUPPORT_LOW_POWER)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_LOW_POWER=$(SUPPORT_LOW_POWER)
DEFAULT_CFLAGS     += -DFEATURE_RETENTION_BOOT
DEFAULT_AFLAGS     += -DFEATURE_RETENTION_BOOT
endif

ifeq ($(strip $(SUPPORT_WIFI_POSITIONING)), 1)
DEFAULT_AFLAGS     += -DSUPPORT_WIFI_POSITIONING
DEFAULT_CFLAGS     += -DSUPPORT_WIFI_POSITIONING
endif

DEFAULT_CFLAGS     += -DSETTING_RTC_CALI_INTERVAL=$(SETTING_RTC_CALI_INTERVAL)

ifeq ($(strip $(SETTING_THROUGHPUT_HIGH)), 1)
DEFAULT_CFLAGS     += -DSETTING_THROUGHPUT_HIGH
DEFAULT_AFLAGS     += -DSETTING_THROUGHPUT_HIGH
endif

ifeq ($(strip $(SUPPORT_USER_HEAP)), 1)
DEFAULT_CFLAGS     += -DFEATURE_USER_HEAP
DEFAULT_AFLAGS     += -DFEATURE_USER_HEAP
endif

ifeq ($(strip $(SUPPORT_PSRAM_HEAP)), 1)
DEFAULT_CFLAGS     += -DFEATURE_PSRAM_HEAP
DEFAULT_AFLAGS     += -DFEATURE_PSRAM_HEAP
endif

ifeq ($(strip $(SUPPORT_BOOTLOADER)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_BOOTLOADER
endif

ifeq ($(strip $(SUPPORT_PARTITION_MP_TABLE)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_PARTITION_MP_TABLE
endif

ifeq ($(strip $(SUPPORT_PARTITION_CFG_TABLE)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_PARTITION_CFG_TABLE
endif

ifeq ($(strip $(RC_MINSTREL_EN)), 1)
DEFAULT_CFLAGS     += -DRC_MINSTREL_EN=1
endif
DEFAULT_CFLAGS     += -DDEFAULT_RATE_MASK_VALUE=$(DEFAULT_RATE_MASK)

DEFAULT_CFLAGS     += -DDEFAULT_LWIP_RESOURCES_PARAMETER=$(LWIP_RESOURCES_PARAMETER)

DEFAULT_CFLAGS     += -DDEFAULT_COUNTRY_CODE=$(COUNTRY_CODE)

DEFAULT_CFLAGS     += -DLWIP_MEMP_DEBUG_EN=$(LWIP_MEMP_DEBUG_EN)

ifeq ($(strip $(WPS_EN)), 1)
DEFAULT_CFLAGS     += -DWPS_EN=1
endif

ifeq ($(strip $(EAP_EN)), 1)
DEFAULT_CFLAGS     += -DEAP_EN=1
endif

ifeq ($(strip $(SAE_EN)), 1)
DEFAULT_CFLAGS     += -DSAE_EN=1
endif

ifeq ($(strip $(PMF_EN)), 1)
DEFAULT_CFLAGS     += -DPMF_EN=1
endif

ifeq ($(strip $(EXTPA_EN)), 1)
DEFAULT_CFLAGS     += -DEXTPA_EN=1
endif

ifeq ($(strip $(CSI_EN)), 1)
DEFAULT_CFLAGS     += -DCSI_EN=1
endif

ifeq ($(strip $(BEACON_LOSS_DETECT_EN)), 1)
DEFAULT_CFLAGS     += -DBEACON_LOSS_DETECT_EN=1
endif

ifeq ($(strip $(PHY_SNIFFER_EN)), 1)
DEFAULT_CFLAGS     += -DPHY_SNIFFER_EN=1
endif

ifeq ($(strip $(SUPPORT_PARTITION_USER_RAW)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_PARTITION_USER_RAW
DEFAULT_CFLAGS     += -DSETTING_PARTITION_USER_RAW_SIZE=$(SETTING_PARTITION_USER_RAW_SIZE)
DEFAULT_AFLAGS     += -DSETTING_PARTITION_USER_RAW_SIZE=$(SETTING_PARTITION_USER_RAW_SIZE)
endif

DEFAULT_CFLAGS     += -DSETTING_PARTITION_MAIN_SIZE=$(SETTING_PARTITION_MAIN_SIZE)



ifeq ($(strip $(FLASH_MODE)), 1)
DEFAULT_CFLAGS     += -DLDS_FLASH_SIZE=$(SETTING_FLASH_SIZE)
endif
DEFAULT_CFLAGS     += -DFLASH_MODE=$(FLASH_MODE)

SYS_BUS_SPEED:=80
SYS_FLASH_SPEED:=80
ifeq ($(strip $(SYS_BUS_CLK)),160M)
SYS_BUS_SPEED:=160
endif
ifeq ($(strip $(SYS_BUS_CLK)),80M)
SYS_BUS_SPEED:=80
endif
ifeq ($(strip $(SYS_BUS_CLK)),40M)
SYS_BUS_SPEED:=40
endif
ifeq ($(strip $(SYS_FLASH_CLK)),80M)
SYS_FLASH_SPEED:=80
endif
ifeq ($(strip $(SYS_FLASH_CLK)),40M)
SYS_FLASH_SPEED:=40
endif
DEFAULT_CFLAGS     += -DSYS_BUS_SPEED=$(SYS_BUS_SPEED)
DEFAULT_AFLAGS     += -DSYS_BUS_SPEED=$(SYS_BUS_SPEED)
DEFAULT_CFLAGS     += -DSYS_FLASH_SPEED=$(SYS_FLASH_SPEED)
DEFAULT_AFLAGS     += -DSYS_FLASH_SPEED=$(SYS_FLASH_SPEED)

SYS_MCU_SPEED:=160
ifeq ($(strip $(SYS_MCU_MAX_CLK)),40M)
SYS_MCU_SPEED:=40
endif
ifeq ($(strip $(SYS_MCU_MAX_CLK)),80M)
SYS_MCU_SPEED:=80
endif
ifeq ($(strip $(SYS_MCU_MAX_CLK)),160M)
SYS_MCU_SPEED:=160
endif
ifeq ($(strip $(SYS_MCU_MAX_CLK)),240M)
SYS_MCU_SPEED:=240
endif
ifeq ($(strip $(SYS_MCU_MAX_CLK)),320M)
SYS_MCU_SPEED:=320
endif
ifeq ($(strip $(SYS_MCU_MAX_CLK)),480M)
SYS_MCU_SPEED:=480
endif
DEFAULT_CFLAGS     += -DSYS_MCU_SPEED=$(SYS_MCU_SPEED)
DEFAULT_AFLAGS     += -DSYS_MCU_SPEED=$(SYS_MCU_SPEED)


ifeq ($(strip $(WIFI_REPEATER_EN)), 1)
DEFAULT_CFLAGS     += -DWIFI_REPEATER_EN=1
endif

ifeq ($(strip $(SOFTAP_EN)), 1)
DEFAULT_CFLAGS     += -DSOFTAP_EN=1
endif

ifeq ($(strip $(HK_EN)), 1)
DEFAULT_CFLAGS     += -DENABLE_HK=1
endif

DEFAULT_CFLAGS     += -DLOCK_CHIP_ID=$(SETTING_LOCK_CHIP_ID)


ifeq ($(strip $(WAC_EN)), 1)
DEFAULT_CFLAGS     += -DWAC_EN
DEFAULT_AFLAGS     += -DWAC_EN
endif

ifeq ($(strip $(MBEDTLS_EN)), 1)
DEFAULT_CFLAGS     += -DMBEDTLS_EN
MBED_TURN  ?= 0
ifeq ($(strip $(MBED_TURN)), 1)
DEFAULT_CFLAGS     += -DMBED_TURN
DEFAULT_CFLAGS     += -DMBED_RO_TURN #1452Bytes
DEFAULT_CFLAGS     += -DSHA512_TEXT_TURN #5040Bytes
DEFAULT_CFLAGS     += -DAES_TEXT_TURN #2700Bytes
DEFAULT_CFLAGS     += -DRSA_TEXT_TURN #152Bytes
DEFAULT_CFLAGS     += -DBIGNUM_TEXT_TURN #2536Bytes
endif
endif
ifneq ($(strip $(MBEDTLSTEST)), 0)
DEFAULT_CFLAGS     += -DMBEDTLSTEST=$(MBEDTLSTEST)
endif

ifeq ($(strip $(SUPPORT_CRYPTO_ENGINE)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_CRYPTO_ENGINE
endif

ifeq ($(strip $(SECURE_ROM)), 1)
DEFAULT_CFLAGS     += -DSECURE_ROM
endif
ifeq ($(strip $(SECURE_BOOT)), 1)
DEFAULT_CFLAGS     += -DSECURE_BOOT
endif

ifeq ($(strip $(ANTI_CLONE_PROTECTION)), 1)
DEFAULT_CFLAGS     += -DANTI_CLONE_PROTECTION
DEFAULT_AFLAGS     += -DANTI_CLONE_PROTECTION
endif

ifeq ($(strip $(IPERF3_EN)), 1)
DEFAULT_CFLAGS     += -DIPERF3_EN
DEFAULT_AFLAGS     += -DIPERF3_EN
endif

ifeq ($(strip $(SMARTCONFIG_EN)), 1)
DEFAULT_CFLAGS     += -DSMARTCONFIG_EN
DEFAULT_AFLAGS     += -DSMARTCONFIG_EN
endif
DEFAULT_CFLAGS     += -DAIRKISSAES_EN=$(AIRKISSAES_EN)
DEFAULT_CFLAGS     += -DAIRKISS_EN=$(AIRKISS_EN)

ifeq ($(strip $(RTLINK_EN)), 1)
DEFAULT_CFLAGS     += -DRTLINK_EN
DEFAULT_AFLAGS     += -DRTLINK_EN
endif

ifeq ($(strip $(JOYLINK_EN)), 1)
DEFAULT_CFLAGS     += -DJOYLINK_EN
DEFAULT_AFLAGS     += -DJOYLINK_EN
endif

ifeq ($(strip $(JD_CLOUD_EN)), 1)
DEFAULT_CFLAGS     += -DJD_CLOUD_EN
DEFAULT_AFLAGS     += -DJD_CLOUD_EN
endif

ifeq ($(strip $(PING_EN)), 1)
DEFAULT_CFLAGS     += -DPING_EN
DEFAULT_AFLAGS     += -DPING_EN
endif

ifeq ($(strip $(TFTP_EN)), 1)
DEFAULT_CFLAGS     += -DTFTP_EN
DEFAULT_AFLAGS     += -DTFTP_EN
endif

ifeq ($(strip $(HTTPC_EN)), 1)
DEFAULT_CFLAGS     += -DHTTPC_EN
DEFAULT_AFLAGS     += -DHTTPC_EN
endif

ifeq ($(strip $(ACOUSTIC_EN)), 1)
DEFAULT_CFLAGS     += -DACOUSTIC_EN
DEFAULT_AFLAGS     += -DACOUSTIC_EN
endif

ifneq ($(strip $(AUDIO_CODEC_EN)), 0)
DEFAULT_CFLAGS     += -DAUDIO_CODEC_EN
DEFAULT_AFLAGS     += -DAUDIO_CODEC_EN
endif

ifeq ($(strip $(CMSIS_EN)), 1)
DEFAULT_CFLAGS     += -DCMSIS_EN
DEFAULT_AFLAGS     += -DCMSIS_EN
endif

DEFAULT_CFLAGS     += -DFOTA_OPTION=$(FOTA_OPTION)
DEFAULT_AFLAGS     += -DFOTA_OPTION=$(FOTA_OPTION)

ifeq ($(strip $(TCPIPSTACK_EN)), 1)
DEFAULT_CFLAGS     += -DTCPIPSTACK_EN
DEFAULT_AFLAGS     += -DTCPIPSTACK_EN
endif

ifeq ($(strip $(BLE_HCI_UART_NUM)), 0)
DEFAULT_CFLAGS     += -DBLE_HCI_UART_NUM=0
endif

ifeq ($(strip $(BLE_HCI_UART_NUM)), 1)
DEFAULT_CFLAGS     += -DBLE_HCI_UART_NUM=1
endif

ifeq ($(strip $(BLE_HCI_UART_NUM)), 2)
DEFAULT_CFLAGS     += -DBLE_HCI_UART_NUM=2
endif

ifeq ($(strip $(BLE_HCI_UART_CRTS_EN)), 0)
DEFAULT_CFLAGS     += -DBLE_HCI_UART_CRTS_EN=0
else
DEFAULT_CFLAGS     += -DBLE_HCI_UART_CRTS_EN=1
endif

ifeq ($(strip $(BLE_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_EN=1
else
DEFAULT_AFLAGS     += -DBLE_EN=0
endif

ifeq ($(strip $(MESH_BLE_EN)), 1)
DEFAULT_CFLAGS     += -DMESH_BLE_EN=1
else
DEFAULT_AFLAGS     += -DMESH_BLE_EN=0
endif

ifeq ($(strip $(BLE_GAP_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GAP_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GAP_EN=0
endif

ifeq ($(strip $(BLE_GATTC_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTC_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GATTC_EN=0
endif

ifeq ($(strip $(BLE_GATTS_API_TEST_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTS_API_TEST=1
else
DEFAULT_AFLAGS     += -DBLE_GATTS_API_TEST=0
endif

ifeq ($(strip $(BLE_GATTC_API_TEST_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTC_API_TEST=1
else
DEFAULT_AFLAGS     += -DBLE_GATTC_API_TEST=0
endif

ifeq ($(strip $(BLE_GATTS_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTS_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GATTS_EN=0
endif

ifeq ($(strip $(BLE_GAP_ATCMD_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GAP_ATCMD_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GAP_ATCMD_EN=0
endif

ifeq ($(strip $(BLE_GATTS_ATCMD_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTS_ATCMD_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GATTS_ATCMD_EN=0
endif

ifeq ($(strip $(BLE_GATTC_ATCMD_EN)), 1)
DEFAULT_CFLAGS     += -DBLE_GATTC_ATCMD_EN=1
else
DEFAULT_AFLAGS     += -DBLE_GATTC_ATCMD_EN=0
endif

ifeq ($(strip $(BLE_AGGR_ADV_REPORT)), 1)
DEFAULT_CFLAGS     += -DBLE_AGGR_ADV_REPORT=1
else
DEFAULT_AFLAGS     += -DBLE_AGGR_ADV_REPORT=0
endif

ifeq ($(strip $(MESH_BLE_AUTO_RUN_EN)), 1)
DEFAULT_CFLAGS     += -DMESH_BLE_AUTO_RUN_EN=1
else
DEFAULT_AFLAGS     += -DMESH_BLE_AUTO_RUN_EN=0
endif

ifeq ($(strip $(MESH_BLE_OTHER_MODEL_EN)), 1)
DEFAULT_CFLAGS     += -DMESH_BLE_OTHER_MODEL_EN=1
else
DEFAULT_AFLAGS     += -DMESH_BLE_OTHER_MODEL_EN=0
endif

ifeq ($(strip $(BLE_DEBUG_ONLY)), 1)
DEFAULT_CFLAGS     += -DBLE_DEBUG_ONLY=1
else
DEFAULT_AFLAGS     += -DBLE_DEBUG_ONLY=0
endif

ifeq ($(strip $(BLE_GPIO_PROFILE)), 1)
DEFAULT_CFLAGS     += -DBLE_GPIO_PROFILE=1
else
DEFAULT_AFLAGS     += -DBLE_GPIO_PROFILE=0
endif

ifneq ($(strip $(SETTING_OTA_METHOD)),)
DEFAULT_CFLAGS     += -DSETTING_OTA_METHOD=$(SETTING_OTA_METHOD)
DEFAULT_AFLAGS     += -DSETTING_OTA_METHOD=$(SETTING_OTA_METHOD)
endif

DEFAULT_CFLAGS     += -DSUPPORT_SRM_TASK_LOG=$(SUPPORT_SRM_TASK_LOG)

DEFAULT_CFLAGS     += -DSUPPORT_EXCEPTION_DUMP=$(SUPPORT_EXCEPTION_DUMP)

SETTING_UART_UPGRADE_EN ?= 0
DEFAULT_CFLAGS     += -DSETTING_UART_UPGRADE_EN=$(SETTING_UART_UPGRADE_EN)
DEFAULT_AFLAGS     += -DSETTING_UART_UPGRADE_EN=$(SETTING_UART_UPGRADE_EN)

ifeq ($(strip $(SETTING_ICACHE)), 1)
DEFAULT_CFLAGS += -DSETTING_ICACHE=1
DEFAULT_AFLAGS += -DSETTING_ICACHE=1
DEFAULT_CFLAGS += -DCONFIG_CACHE_SUPPORT
DEFAULT_AFLAGS += -DCONFIG_CACHE_SUPPORT
else
DEFAULT_CFLAGS += -DSETTING_ICACHE=0
DEFAULT_AFLAGS += -DSETTING_ICACHE=0
endif

ifeq ($(strip $(SETTING_CACHE_WT)), 1)
DEFAULT_CFLAGS += -DCONFIG_CACHE_WT
DEFAULT_AFLAGS += -DCONFIG_CACHE_WT
endif

ifeq ($(strip $(SUPPORT_CLI)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_CLI
DEFAULT_AFLAGS     += -DSUPPORT_CLI
endif

ifeq ($(strip $(SUPPORT_ATCMD)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_ATCMD
DEFAULT_AFLAGS     += -DSUPPORT_ATCMD
endif

ifeq ($(strip $(SUPPORT_CUSTOM_CMD)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_CUSTOM_CMD
DEFAULT_AFLAGS     += -DSUPPORT_CUSTOM_CMD
endif

ifneq ($(strip $(SUPPORT_ILOG)), 0)
DEFAULT_CFLAGS     += -DSUPPORT_ILOG
DEFAULT_AFLAGS     += -DSUPPORT_ILOG
endif

ifneq ($(strip $(SUPPORT_HCILOG)), 0)
DEFAULT_CFLAGS     += -DSUPPORT_HCILOG=$(SUPPORT_HCILOG)
DEFAULT_AFLAGS     += -DSUPPORT_HCILOG=$(SUPPORT_HCILOG)
endif

ifeq ($(strip $(SUPPORT_ISR_USAGE)), 1)
DEFAULT_CFLAGS     += -DSUPPORT_ISR_USAGE
DEFAULT_AFLAGS     += -DSUPPORT_ISR_USAGE
endif

ifeq ($(strip $(SETTING_ROM_BOOT)),1)
DEFAULT_CFLAGS     += -DSETTING_ROM_BOOT=1
DEFAULT_AFLAGS     += -DSETTING_ROM_BOOT=1
endif

ifeq ($(strip $(SUPPORT_OSAL_SYS_INFO)), 1)
CFLAGS      += -DOSAL_SYS_INFO_EN
endif

ifeq ($(strip $(SUPPORT_SRM_DBG_INFO)), 1)
CFLAGS      += -DSRM_DBG_INFO_EN
AFLAGS      += -DSRM_DBG_INFO_EN
endif

ifeq ($(strip $(SUPPORT_HSP)), 1)
ifeq ($(strip $(CHIP_NAME)), ssv6006)
# 6006 not support hsp
else
CFLAGS      += -DCONFIG_SUPPORT_HSP
AFLAGS      += -DCONFIG_SUPPORT_HSP
endif
endif

ifeq ($(strip $(COSIM)), 1)
CFLAGS      += -DSETTING_ASIC_COSIM
AFLAGS      += -DSETTING_ASIC_COSIM
endif

ifeq ($(strip $(INTERNAL_SUPPLICANT)), 1)
CFLAGS 		+= -D_INTERNAL_MCU_SUPPLICANT_SUPPORT_
endif

CFLAGS 		+= -DSETTING_MP3_DECODER=$(SETTING_MP3_DECODER)
CFLAGS 		+= -DSETTING_MP3_ENCODER=$(SETTING_MP3_ENCODER)
CFLAGS 		+= -DUART_BAUD_RATE=$(UART_BAUD_RATE)
CFLAGS 		+= -DUART_IO_NUM=$(UART_IO_NUM)
CFLAGS 		+= -DHWIF_IO_NUM=$(HWIF_IO_NUM)

BL_OPTFLAGS += -DUART_BAUD_RATE=$(UART_BAUD_RATE)
BL_OPTFLAGS += -DFOTA_OPTION=$(FOTA_OPTION)
BL_OPTFLAGS += -DBOOTLOADER_ENABLE_QE=$(BOOTLOADER_ENABLE_QE)
BL_OPTFLAGS += -DUART_UPGRADE_EN=$(SETTING_UART_UPGRADE_EN)
CFLAGS      += -DSETTING_UART_UPGRADE_BOOTLOADER=$(SETTING_UART_UPGRADE_BOOTLOADER)

ifeq ($(strip $(SUPPORT_PERIPHERAL_PWM)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_PWM=1
endif

ifeq ($(strip $(SKIP_DHCP_DOES_ARP_CHECK)), 1)
DEFAULT_CFLAGS     += -DDHCP_DOES_ARP_CHECK=0
endif

ifeq ($(strip $(CUSTOM_NO_CFG)),1)
CFLAGS      += -DCUSTOM_NO_CFG=1
endif

ifeq ($(strip $(SUPPORT_PERIPHERAL_HSUART)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_HSUART=1
endif

ifeq ($(strip $(SUPPORT_PERIPHERAL_ADCBTN)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_ADCBTN=1
endif

ifeq ($(strip $(SUPPORT_PERIPHERAL_ADCBAT)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_ADCBAT=1
endif

ifeq ($(strip $(AMPDU_TX_EN)),1)
CFLAGS 		+= -DAMPDU_TX_EN
endif

ifeq ($(strip $(AMPDU_RX_EN)),1)
CFLAGS 		+= -DAMPDU_RX_EN=1
else
CFLAGS 		+= -DAMPDU_RX_EN=0
endif

ifeq ($(strip $(BLE_EN)),1)
CFLAGS 		+= -DBLE_EN
endif

ifeq ($(strip $(CLI_HISTORY_ENABLE)),1)
CFLAGS 		+= -DCLI_HISTORY_ENABLE=1
else
CFLAGS 		+= -DCLI_HISTORY_ENABLE=0
endif

ifeq ($(strip $(COSIM)), 1)
SUPPORT_FFS:=0
endif
ifneq ($(strip $(SUPPORT_FFS)),0)
CFLAGS      += -DSUPPORT_FFS
CFLAGS      += -DFFS_METHOD=$(SUPPORT_FFS)
DEFAULT_CFLAGS     += -DFFS_METHOD=$(SUPPORT_FFS)
endif

ifeq ($(strip $(SUPPORT_SDC)),1)
CFLAGS      += -DSUPPORT_SDC
endif

CFLAGS      += -DP32=32
CFLAGS      += -DP40=40
CFLAGS      += -DP52=52
CFLAGS      += -DP60=60
CFLAGS      += -DIC_PACKAGE=$(IC_PACKAGE) -DPIN_COUNT=$(PIN_COUNT)

CFLAGS      += -DSUPPORT_CXX=$(SUPPORT_CXX)

CFLAGS      += -DSETTING_SRAM_OPTION=$(SETTING_SRAM_OPTION)
AFLAGS      += -DSETTING_SRAM_OPTION=$(SETTING_SRAM_OPTION)

ifeq ($(strip $(CHIP_ID)),6020)
ifneq ($(strip $(CHIP_SUB_ID)),0)
CFLAGS      += -DFEATURE_RTC32K_XTAL_SUPPORT=1
endif
endif

CFLAGS      += -DSUPPORT_MCU_UNALIGNMENT=$(SUPPORT_MCU_UNALIGNMENT)

ifeq ($(strip $(SUPPORT_PERIPHERAL_ADCBTN)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_ADCBTN=1
endif

ifeq ($(strip $(SUPPORT_PERIPHERAL_ADCBAT)),1)
CFLAGS 		+= -DSUPPORT_PERIPHERAL_ADCBAT=1
endif

CFLAGS      += -DBL_SIZE=$(SETTING_PARTITION_BL_SIZE)

CFLAGS      += -DCHIP_MAX_MEM=$(CHIP_MAX_MEM)

CFLAGS      += -DSUPPORT_HOST_IF=$(SUPPORT_HOST_IF)

ifeq ($(strip $(BUILD_SDK)),1)
CFLAGS      += -DBUILD_SDK=1
endif

ifeq ($(strip $(BUILD_OPTION)), DEBUG)
CFLAGS      += -DBUILD_DEBUG
endif
